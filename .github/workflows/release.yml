name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Build & Publish
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.6.4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: ♻️ Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 📦 Install dependencies
        run: pnpm install

      - name: 🕵️ Check for pending changesets
        id: changesets
        run: |
          pnpm changeset status --output .changeset/status.json
          echo "hasChangesets=$(jq '.releases | length > 0' .changeset/status.json)" >> "$GITHUB_OUTPUT"

      - name: 🧹 Lint
        if: steps.changesets.outputs.hasChangesets == 'true'
        run: pnpm nx run-many -t lint --all

      - name: 🧪 Test
        if: steps.changesets.outputs.hasChangesets == 'true'
        run: pnpm nx run-many -t test --all

      - name: 🛠️ Build
        if: steps.changesets.outputs.hasChangesets == 'true'
        run: pnpm nx run-many -t build --all

      - name: 🚀 Publish to npm
        if: steps.changesets.outputs.hasChangesets == 'true'
        run: pnpm release
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 📝 Generate GitHub Release Notes
        if: steps.changesets.outputs.hasChangesets == 'true'
        id: release_notes
        run: |
          VERSION_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "release_tag=$VERSION_TAG" >> $GITHUB_OUTPUT

          echo "## 📦 Updated Packages" > release-notes.md
          echo "" >> release-notes.md
          echo "| Package | Version |" >> release-notes.md
          echo "|---------|---------|" >> release-notes.md
          jq -r '.releases[] | "| `" + .name + "` | `" + .newVersion + "` |"' .changeset/status.json >> release-notes.md

      - name: 🏷️ Tag GitHub Release
        if: steps.changesets.outputs.hasChangesets == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.release_notes.outputs.release_tag }}
          name: Release ${{ steps.release_notes.outputs.release_tag }}
          body_path: release-notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
