name: Test Workflow

on:
  workflow_call:
    inputs:
      base-ref:
        required: true
        type: string
        description: 'Base reference for determining affected packages'
      runAll:
        required: false
        type: boolean
        default: false
        description: 'Whether to run all tests or just affected'
  workflow_dispatch:
    inputs:
      base-ref:
        description: 'Base reference for determining affected packages'
        required: true
        default: 'main'
        type: string
      runAll:
        description: 'Run all tests instead of just affected'
        required: false
        default: false
        type: boolean
      node-version:
        description: 'Node.js version to use'
        required: false
        default: '18'
        type: choice
        options:
          - '18'
          - '20'
          - '22'

jobs:
  test:
    name: üß™ Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Use conditional to set node version array
        node: ${{ fromJSON(github.event_name == 'workflow_dispatch' && format('["{0}"]', github.event.inputs.node-version) || '[18, 20, 22]') }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: pnpm/action-setup@v2
        with:
          version: 10.6.4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: ‚ôªÔ∏è Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - run: pnpm install --frozen-lockfile

      # Run tests based on runAll flag
      - name: Run all tests
        if: inputs.runAll == true
        run: pnpm nx run-many -t test --all

      - name: Run affected tests
        if: sinputs.runAll != true
        run: |
          pnpm nx affected -t test --base="${{ inputs.base-ref }}" --head=HEAD
